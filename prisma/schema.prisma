// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Games {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  image       String
  price       Float
  rating      Float
  genres       GenresOnGames[]
  platforms    PlatformsOnGames[]
  releaseDate DateTime
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Genres {
  id        Int      @id @default(autoincrement())
  name      String
  games     GenresOnGames[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Platform {
  id        Int      @id @default(autoincrement())
  name      String
  games     PlatformsOnGames[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model GenresOnGames {
  gameId    Int
  genreId   Int
  game      Games   @relation(fields: [gameId], references: [id], onDelete: Cascade)
  genre     Genres  @relation(fields: [genreId], references: [id], onDelete: Cascade)

  @@id([gameId, genreId])
}

model PlatformsOnGames {
  gameId    Int
  platformId Int
  game      Games    @relation(fields: [gameId], references: [id], onDelete: Cascade)
  platform  Platform @relation(fields: [platformId], references: [id], onDelete: Cascade)

  @@id([gameId, platformId])
}

model Users {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Carts {
  id        Int      @id @default(autoincrement())
  userId    Int
  gameId    Int
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
