# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - greengamingstore

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "22.x"

      - name: Install dependencies
        run: |
          npm install
          npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: Build Next.js app with standalone output
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          AUTH_SECRET: ${{ secrets.AUTH_SECRET }}

      - name: Add environment variables to deployment
        run: |
          # Create .env file in the standalone directory
          echo "AUTH_SECRET=${{ secrets.AUTH_SECRET }}" > .next/standalone/.env
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .next/standalone/.env

          # Verify it was created (without showing secrets)
          echo "Created .env file:"
          grep -v "SECRET\|URL" .next/standalone/.env || echo "No non-sensitive variables to show"

      - name: Create startup script in standalone output
        run: |
          # Create startup script in the standalone output directory
          echo '#!/bin/bash
          # Load environment variables
          export $(grep -v "^#" .env | xargs)
          # Start Next.js in standalone mode
          cd standalone
          node server.js' > .next/standalone/start.sh

          # Make it executable
          chmod +x .next/standalone/start.sh

          # Verify it was created
          ls -la .next/standalone/
          cat .next/standalone/start.sh

      - name: Prepare deployment package
        run: |
          # Copy public and static folders to standalone directory
          cp -r .next/static .next/standalone/.next/
          mkdir -p .next/standalone/public
          cp -r public/* .next/standalone/public/ || echo "No public files to copy"

          # Verify the structure
          echo "Standalone directory contents:"
          ls -la .next/standalone/
          echo ".next directory in standalone:"
          ls -la .next/standalone/.next/

      - name: Zip artifact for deployment
        run: |
          cd .next/standalone
          zip -r ../../release.zip .
          cd ../..
          # Verify zip contents
          unzip -l release.zip | head -n 20

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: "Production"
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write #This is required for requesting the JWT
      contents: read #This is required for actions/checkout
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip
          # Verify critical files exist
          ls -la
          echo "Directory structure:"
          find . -type f -name "*.js" | sort

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_91A3A662EE5640BC9380F010677D5F22 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_F4884EE765D0457EAB59159D15D3353B }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_0E5FCBE869CB437E8FF18628FFF42B39 }}

      - name: "Deploy to Azure Web App"
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: "greengamingstore"
          slot-name: "Production"
          package: .
          startup-command: "./start.sh"
